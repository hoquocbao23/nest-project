import { Controller, Get, Post, Body } from '@nestjs/common';

import { MathService } from './math/math.service';
import { CountService } from './count/count.service';
import { AppService } from './app.service';
import { InjectRepository } from '@nestjs/typeorm';
import { User } from './user/entities/user.entity';
import { Repository } from 'typeorm';
import { BookService } from './book/book.service';
import { CreateBookDto } from './book/dto/create-book.dto';


@Controller()
export class AppController {
  constructor(private readonly mathService: MathService, 
              private readonly countService: CountService,
              private readonly appService: AppService,
              private readonly bookService: BookService

            // If you want to use the repository outside of the module which imports TypeOrmModule.forFeature, 
            // you'll need to re-export the providers generated by it. You can do this by exporting the whole module
            // @InjectRepository(User)
            // private userRepository: Repository<User>
          ) {}

  @Post()
  async getHello(@Body() createBookDto: CreateBookDto) {
     return  await this.bookService.create(createBookDto);
     
  }
}
